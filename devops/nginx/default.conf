worker_processes auto;                   # 根据 CPU 自动分配
worker_rlimit_nofile 65535;              # 打开文件句柄限制

events {
    worker_connections 4096;             # 每个 worker 允许的最大连接数
    use epoll;                           # 高性能 I/O 模型（Linux）
    multi_accept on;                     # 尽可能多地接受新连接
}

http {
    # 性能优化
    sendfile on;                         # zero-copy 文件传输
    tcp_nopush on;                       # 合并小包
    tcp_nodelay on;                      # 低延迟
    keepalive_timeout 65;                # keep-alive
    client_header_timeout 10s;
    client_body_timeout 10s;
    send_timeout 10s;

    # 缓冲区设置
    client_max_body_size 20m;            # 上传限制
    client_body_buffer_size 128k;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 16k;

    # proxy 缓冲
    proxy_buffers 8 16k;
    proxy_buffer_size 4k;
    # 定义缓存路径及参数
    proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=1h use_temp_path=off;
}

# 定义负载均衡后端服务器池
upstream backend_pool {
    server backend1.local max_fails=3 fail_timeout=30s;  # 配置失败重试
    server backend2.local max_fails=3 fail_timeout=30s;
    # server backend1.local weight=3;  # 示例：按权重
}

# ========================
# 监听 80 端口
# 实现 HTTP → HTTPS 强制跳转
# ========================
server {
    listen 80;
    server_name yourdomain.com;

    location / {
        add_header Cache-Control "no-store";  # 不缓存重定向
        return 301 https://$host$request_uri;  # 301 永久重定向
    }
}

# ========================
# 监听 443 端口 (HTTPS)
# 并配置反向代理 + 缓存
# ========================
server {
    listen 443 ssl;
    server_name yourdomain.com;

    # SSL 证书配置 (请替换为真实路径)
    ssl_certificate /path/to/cert.pem;
    ssl_certificate_key /path/to/key.pem;

    # SSL 加密协议及套件
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;

    # 启用 HSTS，防止降级攻击
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # 统一 location 配置 (反代 + 缓存)
    location / {
        proxy_pass http://backend_pool;  # 转发到上游后端
        proxy_set_header Host $host;  # 保留原始 Host
        proxy_set_header X-Real-IP $remote_addr;  # 获取真实客户端 IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 转发链
        proxy_set_header X-Forwarded-Proto $scheme;  # 标记协议 (http/https)

        # 缓存配置
        proxy_cache my_cache;
        proxy_cache_valid 200 1h;  # 仅缓存 200 状态的响应，缓存 1 小时
    }
}
