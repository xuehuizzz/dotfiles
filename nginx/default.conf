# nginx -t    # 测试配置文件是否正确, 检查nginx的默认配置文件
# nginx -t -c filr_path  # 指定文件检查
# nginx -s reload  # 重新加载配置文件, 无需重启服务

# 负载均衡服务器池配置
upstream backend_pool {
    # 配置后端服务器
    server backend1.local;
    server backend2.local;
    # 设置权重示例
    # server backend1.local weight=3;
}

# 配置 HTTP 监听 80 端口并实现反向代理
server {
    listen 80;
    server_name yourdomain.com;  # 将 yourdomain.com 替换为您的域名

    # 强制将所有 HTTP 请求重定向到 HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# 配置 HTTPS 监听 443 端口并实现反向代理和缓存
server {
    listen 443 ssl;
    server_name yourdomain.com;  # 将 yourdomain.com 替换为您的域名

    # SSL 配置
    ssl_certificate /path/to/cert.pem;  # 替换为您的 SSL 证书路径
    ssl_certificate_key /path/to/key.pem;  # 替换为您的 SSL 证书密钥路径

    # SSL 设置优化
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # 反向代理配置
    location / {
        proxy_pass http://backend_pool;  # 使用负载均衡服务器池
        proxy_set_header Host $host;
        # proxy_http_version xxx;    # 默认使用1.1与后台服务器通信, 一般不需要显式指定，但是在特定需求下（例如 WebSocket、特定版本的协议支持），可以显式指定所需的 HTTP 协议版本
            #  curl -I -v https://www.baidu.com  # 查看地址支持什么协议(以百度为例)
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 启用缓存
    proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=1g;
    location / {
        proxy_pass http://backend_pool;  # 依旧使用负载均衡
        proxy_cache my_cache;
        proxy_cache_valid 200 1h;  # 缓存有效期设置为 1 小时
    }
}
