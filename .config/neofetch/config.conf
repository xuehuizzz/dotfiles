print_info() {
 MAC=$(get_mac)
 BatteryCycleCount=$(get_cycle_count)
 info "OS" distro
 info "Kernel" kernel
 info "Uptime" uptime
 info "Shell" shell
 info "Resolution" resolution
 info "CPU" cpu
 info "GPU" gpu
 info "Memory" memory
 info "IP" local_ip
 info "MAC" MAC
 info "BatteryCycleCount" BatteryCycleCount
 # info "Locale" locale  # This only works on glibc systems.
}

# 获取MAC地址信息, en1接口根据实际修改
function get_mac() {
    ifconfig en0 | awk '/ether/ {print $2; exit}'
}

# 获取电池循环次数
function get_cycle_count() {
    ioreg -l | grep -o '"CycleCount" = [0-9]*' | awk -F'= ' '{print $2}'
 }

# Kernel
# on:  '4.8.9-1-ARCH'
# off: 'Linux 4.8.9-1-ARCH'
kernel_shorthand="off"


# Uptime
# on:   '2 days, 10 hours, 3 mins'
# tiny: '2d 10h 3m'
# off:  '2 days, 10 hours, 3 minutes'
uptime_shorthand="on"


# Memory
# on:   '1801MiB / 7881MiB (22%)'
# off:  '1801MiB / 7881MiB'
memory_percent="on"
memory_unit="gib"    # kib、mib、gib


# Shell
# on:  '/bin/bash'
# off: 'bash'
shell_path="off"

# Example:
# on:  'bash 4.4.5'
# off: 'bash'
shell_version="on"


# CPU

# CPU speed type
#
# Default: 'bios_limit'
# Values: 'scaling_cur_freq', 'scaling_min_freq', 'scaling_max_freq', 'bios_limit'.
# Flag:    --speed_type
# Supports: Linux with 'cpufreq'
# NOTE: Any file in '/sys/devices/system/cpu/cpu0/cpufreq' can be used as a value.
speed_type="bios_limit"

# CPU speed shorthand
# NOTE: This flag is not supported in systems with CPU speed less than 1 GHz
# on:    'i7-6500U (4) @ 3.1GHz'
# off:   'i7-6500U (4) @ 3.100GHz'
speed_shorthand="off"

# Enable/Disable CPU brand in output.
# on:   'Intel i7-6500U'
# off:  'i7-6500U (4)'
cpu_brand="on"

# CPU Speed
# on:  'Intel i7-6500U (4) @ 3.1GHz'
# off: 'Intel i7-6500U (4)'
cpu_speed="on"

# CPU Cores
# Support: 'physical' doesn't work on BSD.
# logical:  'Intel i7-6500U (4) @ 3.1GHz' (All virtual cores)
# physical: 'Intel i7-6500U (2) @ 3.1GHz' (All physical cores)
# off:      'Intel i7-6500U @ 3.1GHz'
cpu_cores="logical"

# CPU Temperature
# NOTE: For FreeBSD and NetBSD-based systems, you'll need to enable
#       coretemp kernel module. This only supports newer Intel processors.
# C:   'Intel i7-6500U (4) @ 3.1GHz [27.2°C]'
# F:   'Intel i7-6500U (4) @ 3.1GHz [82.0°F]'
# off: 'Intel i7-6500U (4) @ 3.1GHz'
cpu_temp="off"


# GPU
# on:  'AMD HD 7950'
# off: 'HD 7950'
gpu_brand="on"

# Which GPU to display
# Supports: Linux
# all:
#   GPU1: AMD HD 7950
#   GPU2: Intel Integrated Graphics
#
# dedicated:
#   GPU1: AMD HD 7950
#
# integrated:
#   GPU1: Intel Integrated Graphics
gpu_type="all"


# Resolution
# on:  '1920x1080 @ 60Hz'
# off: '1920x1080'
refresh_rate="on"


